{"version":3,"file":"component---src-pages-user-profile-js-66676690e5c356f5e0ce.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/user-profile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport { useUser } from \"../contexts/UserContext\";\nimport flightsData from \"../data/featuredFlights.json\";\nimport { Box, TextField, Button, Typography, Grid, Paper, List, ListItem, ListItemText } from '@mui/material';\n\nconst UserProfilePage = () => {\n    const { user, setUser } = useUser();\n    const [userInfo, setUserInfo] = useState(user || {});\n    const [wishlist, setWishlist] = useState(user?.wishlist || []);\n    const [currentPage, setCurrentPage] = useState(1);\n    const flightsPerPage = 3;\n\n    useEffect(() => {\n        const updatedUser = { ...userInfo, wishlist };\n        setUser(updatedUser);\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n    }, [wishlist, userInfo, setUser]);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setUserInfo({ ...userInfo, [name]: value });\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setUser(userInfo);\n        alert(\"Profile updated successfully!\");\n    };\n\n    const handleRemoveFromWishlist = (flightId) => {\n        setWishlist(wishlist.filter(id => id !== flightId));\n    };\n\n    const getFlightDetails = (flightId) => {\n        return flightsData.flights.find(flight => flight.id === flightId);\n    };\n\n    const indexOfLastFlight = currentPage * flightsPerPage;\n    const indexOfFirstFlight = indexOfLastFlight - flightsPerPage;\n    const currentFlights = wishlist.slice(indexOfFirstFlight, indexOfLastFlight);\n\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n    return (\n        <Layout>\n            <Box my={4}>\n                <Typography variant=\"h4\" gutterBottom>User Profile</Typography>\n                <form onSubmit={handleSubmit} style={{ maxWidth: '600px', margin: 'auto' }}>\n                    <TextField \n                        fullWidth \n                        label=\"Name\" \n                        name=\"name\" \n                        value={userInfo.name} \n                        onChange={handleInputChange}\n                        margin=\"normal\"\n                    />\n                    <TextField \n                        fullWidth \n                        label=\"Email\" \n                        name=\"email\" \n                        value={userInfo.email} \n                        onChange={handleInputChange}\n                        margin=\"normal\"\n                    />\n                    <TextField \n                        fullWidth \n                        label=\"Phone\" \n                        name=\"phone\" \n                        value={userInfo.phone} \n                        onChange={handleInputChange}\n                        margin=\"normal\"\n                    />\n                    <TextField \n                        fullWidth \n                        label=\"Favorite Airline\" \n                        name=\"favoriteAirline\" \n                        value={userInfo.favoriteAirline} \n                        onChange={handleInputChange}\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={{ marginTop: '20px' }}>\n                        Save Changes\n                    </Button>\n                </form>\n            </Box>\n\n            <Box my={4}>\n                <Typography variant=\"h5\" gutterBottom>My Wishlist</Typography>\n                <Grid container spacing={2}>\n                    {currentFlights.map(flightId => {\n                        const flight = getFlightDetails(flightId);\n                        return (\n                            <Grid item xs={12} sm={6} md={4} key={flightId}>\n                                <Paper style={{ padding: '15px' }}>\n                                    <Typography variant=\"subtitle1\">{flight.airline} - {flight.departureTime}</Typography>\n                                    <Typography variant=\"body2\">Price: ${flight.price}</Typography>\n                                    <Button \n                                        variant=\"outlined\" \n                                        color=\"error\"\n                                        onClick={() => handleRemoveFromWishlist(flightId)}\n                                        style={{ marginTop: '10px' }}\n                                    >\n                                        Remove\n                                    </Button>\n                                </Paper>\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n\n                <Box mt={4} display=\"flex\" justifyContent=\"center\">\n                    <List>\n                        {[...Array(Math.ceil(wishlist.length / flightsPerPage)).keys()].map(number => (\n                            <ListItem key={number + 1} button onClick={() => paginate(number + 1)}>\n                                <ListItemText primary={number + 1} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Box>\n            </Box>\n        </Layout>\n    );\n};\n\nexport default UserProfilePage;\n"],"names":["UserProfilePage","user","setUser","useUser","userInfo","setUserInfo","useState","wishlist","setWishlist","currentPage","setCurrentPage","useEffect","updatedUser","localStorage","setItem","JSON","stringify","handleInputChange","event","name","value","target","indexOfLastFlight","indexOfFirstFlight","currentFlights","slice","React","Layout","Box","my","Typography","variant","gutterBottom","onSubmit","preventDefault","alert","style","maxWidth","margin","TextField","fullWidth","label","onChange","email","phone","favoriteAirline","Button","color","type","marginTop","Grid","container","spacing","map","flightId","flight","flightsData","find","id","getFlightDetails","item","xs","sm","md","key","Paper","padding","airline","departureTime","price","onClick","filter","handleRemoveFromWishlist","mt","display","justifyContent","List","_toConsumableArray","Array","Math","ceil","length","keys","number","ListItem","button","ListItemText","primary"],"sourceRoot":""}
(function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();document.addEventListener("DOMContentLoaded",()=>{function p(n){return new Promise(r=>{const e=new Image;e.src=n,e.onload=()=>{e.naturalWidth>0?r(n):r("/icons/git.svg")},e.onerror=()=>r("/icons/git.svg")})}function c(n,r){const e=document.createElement("div");e.className="bg-white rounded shadow p-4";const t=document.createElement("div");t.className="flex items-center space-x-2 mb-2";const o=document.createElement("img");o.src=r,o.alt=`${n.title} icon`,o.className="w-6 h-6",t.appendChild(o);const i=document.createElement("h2");i.textContent=n.title,i.className="text-xl font-semibold",t.appendChild(i),e.appendChild(t);const u=document.createElement("p");u.textContent=n.description,u.className="text-gray-600 mb-2",e.appendChild(u);const l=document.createElement("div");l.className="flex space-x-4";const s=document.createElement("a");s.href=n.github,s.target="_blank",s.rel="noopener noreferrer";const d=document.createElement("img");d.src="/icons/github.svg",d.alt="GitHub",d.className="w-6 h-6",s.appendChild(d),l.appendChild(s);const a=document.createElement("a");a.href=n.url,a.target="_blank",a.rel="noopener noreferrer";const m=document.createElement("img");return m.src="/icons/external-link.svg",m.alt="Visit Project",m.className="w-6 h-6",a.appendChild(m),l.appendChild(a),e.appendChild(l),e}fetch("/content.json").then(n=>n.json()).then(n=>{const r=document.getElementById("projects-container");n.forEach(e=>{const o=`/icons/${e.github.split("/").pop()}.png`;p(o).then(i=>{r.appendChild(c(e,i))})})}).catch(n=>{console.error("Error fetching projects:",n)})});

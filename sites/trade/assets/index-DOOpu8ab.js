(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))u(t);new MutationObserver(t=>{for(const c of t)if(c.type==="childList")for(const l of c.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&u(l)}).observe(document,{childList:!0,subtree:!0});function s(t){const c={};return t.integrity&&(c.integrity=t.integrity),t.referrerPolicy&&(c.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?c.credentials="include":t.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function u(t){if(t.ep)return;t.ep=!0;const c=s(t);fetch(t.href,c)}})();const $="wss://websocket.scriptslice.com",x="turn:turn.drobilica.com:5349",T="gatalinka",k="zabazelena",N={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:x,username:T,credential:k}]},U=16384,z=4e3,A=5,J=3e3,b=2*1024*1024,M=document.getElementById("generateRoomBtn"),j=document.getElementById("roomCode"),_=document.getElementById("copyRoomUrlBtn"),W=document.getElementById("copyRoomIdBtn"),q=document.getElementById("joinRoomInput"),H=document.getElementById("joinRoomBtn"),Y=document.getElementById("yourFileInput"),G=document.getElementById("yourFiles"),K=document.getElementById("theirFiles"),P=document.getElementById("roomDisplay"),I=document.getElementById("uploadProgressContainer"),Q=document.getElementById("uploadProgress"),Z=document.getElementById("uploadProgressPercent");let n=null,i=null,a=null,r=null,g=[],E=0,f=[],y=0,p=[],m=0,w=0,C="";function D(){a&&a.close(),a=new WebSocket($),a.onopen=()=>{console.log("WebSocket connected"),a.send(JSON.stringify({type:"join",room:r})),console.log(`Joined room: ${r}`),F()},a.onmessage=async e=>{let o;try{const s=await e.data.text();o=JSON.parse(s)}catch(s){console.error("Failed to parse message as JSON:",e.data),console.error(s);return}if(o.room!==r){console.log(`Ignoring message for room ${o.room}`);return}o.type==="offer"?await ne(o.offer):o.type==="answer"?await te(o.answer):o.type==="candidate"&&re(o.candidate)},a.onerror=e=>{console.error("WebSocket error:",e)},a.onclose=()=>{console.log("WebSocket closed")}}function F(){de(),console.log("Initializing peer connection");try{n=new RTCPeerConnection(N),i=n.createDataChannel("fileTransfer"),S(i),n.ondatachannel=e=>{i=e.channel,S(i)},n.onicecandidate=e=>{e.candidate&&a.send(JSON.stringify({type:"candidate",candidate:e.candidate,room:r}))},n.onconnectionstatechange=()=>{console.log(`Peer connection state: ${n.connectionState}`),(n.connectionState==="failed"||n.connectionState==="disconnected")&&(console.log("Peer connection failed or disconnected. Retrying..."),d())},oe()}catch(e){console.error("Failed to create peer connection:",e),d()}}function S(e){e.binaryType="arraybuffer",e.bufferedAmountLowThreshold=b,e.onopen=()=>{console.log("Data channel open"),y=0,L()},e.onclose=()=>{console.log("Data channel closed"),d()},e.onerror=o=>{console.error("Data channel error:",o),d()},e.onmessage=V,e.onbufferedamountlow=()=>{console.log("Buffered amount is low, resuming file sending..."),L()}}function V(e){if(typeof e.data=="string"){const o=JSON.parse(e.data);o.type==="fileMeta"&&X(o)}else e.data instanceof ArrayBuffer&&ee(e.data)}function X(e){if(e.room!==r){console.log(`Ignoring file not intended for this room. Current room: ${r}, message room: ${e.room}`);return}C=e.name,w=e.size,m=0,p=[]}function ee(e){if(p.push(e),m+=e.byteLength,console.log(`Received ${e.byteLength} bytes, total: ${m} bytes`),m===w){const o=new Blob(p);v({name:C,data:URL.createObjectURL(o)},K),p=[],m=0,w=0,C=""}}async function oe(){try{const e=await n.createOffer();await n.setLocalDescription(e),a.send(JSON.stringify({type:"offer",offer:n.localDescription,room:r}))}catch(e){console.error("Error creating offer:",e),d()}}async function ne(e){try{n.signalingState!=="stable"&&(console.warn("Peer connection state is not stable, resetting..."),await n.setLocalDescription({type:"rollback"})),await n.setRemoteDescription(new RTCSessionDescription(e));const o=await n.createAnswer();for(await n.setLocalDescription(o),a.send(JSON.stringify({type:"answer",answer:n.localDescription,room:r}));f.length>0;)await n.addIceCandidate(f.shift())}catch(o){console.error("Error handling offer:",o),d()}}async function te(e){try{if(n.signalingState==="have-local-offer")for(await n.setRemoteDescription(new RTCSessionDescription(e));f.length>0;)await n.addIceCandidate(f.shift());else console.warn("Received answer in unexpected state:",n.signalingState)}catch(o){console.error("Error handling answer:",o),d()}}function re(e){n.remoteDescription&&n.remoteDescription.type?n.addIceCandidate(new RTCIceCandidate(e)).catch(o=>{console.error("Error adding received ICE candidate",o)}):(console.log("Queueing candidate until remote description is set"),f.push(e))}function ie(e){const o=e.target.files[0];ce(o)}function ce(e){const o=new FileReader;let s=0;I.classList.remove("hidden"),R(0),v({name:e.name,data:""},G,!0),i.send(JSON.stringify({type:"fileMeta",name:e.name,size:e.size,room:r})),o.onload=()=>{const t=o.result;i&&i.readyState==="open"?i.bufferedAmount+t.byteLength>b?(console.log("Data channel buffered amount high, queuing chunk..."),g.push({chunk:t,offset:s,file:e})):(i.send(t),s+=t.byteLength,R(Math.min(s/e.size*100,100)),s<e.size?u(s):(console.log("File sent successfully"),I.classList.add("hidden"))):(console.log("Data channel is not open, queuing file"),g.push({chunk:t,offset:s,file:e}))};const u=t=>{const c=e.slice(t,t+U);o.readAsArrayBuffer(c)};u(0)}function L(){for(;g.length>0&&i&&i.readyState==="open";){const e=g.shift();if(i.bufferedAmount+e.chunk.byteLength<=b)i.send(e.chunk),R(Math.min(e.offset/e.file.size*100,100));else{g.unshift(e),console.log("Data channel still full, waiting...");break}}}function R(e){Q.value=e,Z.textContent=`${e.toFixed(2)}%`}function v(e,o,s){if(Array.from(o.children).find(l=>l.textContent.includes(e.name)))return;const t=document.createElement("li"),c=document.createElement("a");if(c.href=e.data||"#",c.download=e.name,c.textContent=e.name,t.appendChild(c),o.appendChild(t),!s){const l=document.createElement("button");l.textContent="Download",l.className="bg-blue-500 text-white px-2 py-1 rounded ml-2",l.addEventListener("click",()=>{const h=document.createElement("a");h.href=e.data,h.download=e.name,h.click()}),t.appendChild(l)}}function se(){P.textContent=`Joined Room: ${r}`;const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)}function O(e){console.log(`Joining room: ${e}`),P.textContent=`Joined Room: ${e}`,D()}M.addEventListener("click",()=>{const e=Date.now();e-E>=z?(n&&(n.close(),n=null),a&&(a.close(),a=null),r=Math.random().toString(36).substring(2,10),j.value=r,console.log(`Generated room: ${r}`),se(),D(),E=e):console.log("Please wait before generating a new room.")});_.addEventListener("click",()=>{const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)});W.addEventListener("click",()=>{navigator.clipboard.writeText(r).then(()=>console.log("Room ID copied!")),console.log(`Copied room ID: ${r}`)});H.addEventListener("click",()=>{const e=q.value.trim();e&&(r=e,O(r))});Y.addEventListener("change",ie);const ae=new URLSearchParams(window.location.search),B=ae.get("room");B&&(r=B,O(r));function le(){n&&(n.close(),n=null),i&&(i.close(),i=null),console.log("Cleanup completed.")}function de(){n&&(n.close(),n=null),i&&(i.close(),i=null),f=[],y=0}function d(){y<A?(y++,setTimeout(F,J)):(console.error("Retry limit reached. Cleanup initiated."),le())}

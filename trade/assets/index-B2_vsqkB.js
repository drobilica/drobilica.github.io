(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))u(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&u(l)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function u(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();const D="wss://relay.drobilica.com:8080",F="turn:relay.drobilica.com:3478",O="forky",$="3kerQa28CjgX",x={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:F,username:O,credential:$}]},T=16384,N=4e3,k=5,U=3e3,J=document.getElementById("generateRoomBtn"),M=document.getElementById("roomCode"),A=document.getElementById("copyRoomUrlBtn"),j=document.getElementById("copyRoomIdBtn"),z=document.getElementById("joinRoomInput"),W=document.getElementById("joinRoomBtn"),_=document.getElementById("yourFileInput"),q=document.getElementById("yourFiles"),Y=document.getElementById("theirFiles"),S=document.getElementById("roomDisplay"),w=document.getElementById("uploadProgressContainer"),G=document.getElementById("uploadProgress"),K=document.getElementById("uploadProgressPercent");let n=null,a=null,c=null,r=null,m=[],C=0,f=[],p=0,y=[],h=0,b="";function L(){c&&c.close(),c=new WebSocket(D),c.onopen=()=>{console.log("WebSocket connected"),c.send(JSON.stringify({type:"join",room:r})),console.log(`Joined room: ${r}`),B()},c.onmessage=async e=>{let o;try{const s=await e.data.text();o=JSON.parse(s)}catch(s){console.error("Failed to parse message as JSON:",e.data),console.error(s);return}if(o.room!==r){console.log(`Ignoring message for room ${o.room}`);return}o.type==="offer"?await V(o.offer):o.type==="answer"?await ee(o.answer):o.type==="candidate"&&oe(o.candidate)},c.onerror=e=>{console.error("WebSocket error:",e)},c.onclose=()=>{console.log("WebSocket closed")}}function B(){n&&n.close(),console.log("Initializing peer connection");try{n=new RTCPeerConnection(x),a=n.createDataChannel("fileTransfer"),R(a),n.ondatachannel=e=>{a=e.channel,R(a)},n.onicecandidate=e=>{e.candidate&&c.send(JSON.stringify({type:"candidate",candidate:e.candidate,room:r}))},n.onconnectionstatechange=()=>{(n.connectionState==="failed"||n.connectionState==="disconnected")&&(console.log("Peer connection failed or disconnected. Retrying..."),d())},Z()}catch(e){console.error("Failed to create peer connection:",e),d()}}function R(e){e.binaryType="arraybuffer",e.onopen=()=>{for(console.log("Data channel open"),p=0;m.length>0;){const o=m.shift();ce(o)}},e.onclose=()=>{console.log("Data channel closed"),d()},e.onerror=o=>{console.error("Data channel error:",o),d()},e.onmessage=Q}function Q(e){if(typeof e.data=="string"){const o=JSON.parse(e.data);o.type==="fileMeta"&&H(o)}else e.data instanceof ArrayBuffer&&X(e.data)}function H(e){if(e.room!==r){console.log(`Ignoring file not intended for this room. Current room: ${r}, message room: ${e.room}`);return}b=e.name,h=0,y=[]}function X(e){y.push(e),h+=e.byteLength,console.log(`Received ${e.byteLength} bytes, total: ${h} bytes`);const o=new Blob(y);v({name:b,data:URL.createObjectURL(o)},Y)}async function Z(){try{const e=await n.createOffer();await n.setLocalDescription(e),c.send(JSON.stringify({type:"offer",offer:n.localDescription,room:r}))}catch(e){console.error("Error creating offer:",e),d()}}async function V(e){try{n.signalingState!=="stable"&&(console.warn("Peer connection state is not stable, resetting..."),await n.setLocalDescription({type:"rollback"})),await n.setRemoteDescription(new RTCSessionDescription(e));const o=await n.createAnswer();for(await n.setLocalDescription(o),c.send(JSON.stringify({type:"answer",answer:n.localDescription,room:r}));f.length>0;)await n.addIceCandidate(f.shift())}catch(o){console.error("Error handling offer:",o),d()}}async function ee(e){try{if(n.signalingState==="have-local-offer")for(await n.setRemoteDescription(new RTCSessionDescription(e));f.length>0;)await n.addIceCandidate(f.shift());else console.warn("Received answer in unexpected state:",n.signalingState)}catch(o){console.error("Error handling answer:",o),d()}}function oe(e){n.remoteDescription&&n.remoteDescription.type?n.addIceCandidate(new RTCIceCandidate(e)).catch(o=>{console.error("Error adding received ICE candidate",o)}):(console.log("Queueing candidate until remote description is set"),f.push(e))}function ne(e){const o=e.target.files[0];te(o)}function te(e){const o=new FileReader;let s=0;w.classList.remove("hidden"),I(0),v({name:e.name,data:""},q,!0),a.send(JSON.stringify({type:"fileMeta",name:e.name,size:e.size,room:r})),o.onload=()=>{if(a&&a.readyState==="open"){const t=o.result;a.send(t),s+=t.byteLength,I(Math.min(s/e.size*100,100)),s<e.size?u(s):(console.log("File sent successfully"),w.classList.add("hidden"))}else console.log("Data channel is not open, queuing file"),m.push({file:e,offset:s})};const u=t=>{const i=e.slice(t,t+T);o.readAsArrayBuffer(i)};u(0)}function I(e){G.value=e,K.textContent=`${e.toFixed(2)}%`}function v(e,o,s){if(Array.from(o.children).find(l=>l.textContent.includes(e.name)))return;const t=document.createElement("li"),i=document.createElement("a");if(i.href=e.data||"#",i.download=e.name,i.textContent=e.name,t.appendChild(i),o.appendChild(t),!s){const l=document.createElement("button");l.textContent="Download",l.className="bg-blue-500 text-white px-2 py-1 rounded ml-2",l.addEventListener("click",()=>{const g=document.createElement("a");g.href=e.data,g.download=e.name,g.click()}),t.appendChild(l)}}function re(){S.textContent=`Joined Room: ${r}`;const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)}function P(e){console.log(`Joining room: ${e}`),S.textContent=`Joined Room: ${e}`,L()}J.addEventListener("click",()=>{const e=Date.now();e-C>=N?(n&&(n.close(),n=null),c&&(c.close(),c=null),r=Math.random().toString(36).substring(2,10),M.value=r,console.log(`Generated room: ${r}`),re(),L(),C=e):console.log("Please wait before generating a new room.")});A.addEventListener("click",()=>{const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)});j.addEventListener("click",()=>{navigator.clipboard.writeText(r).then(()=>console.log("Room ID copied!")),console.log(`Copied room ID: ${r}`)});W.addEventListener("click",()=>{const e=z.value.trim();e&&(r=e,P(r))});_.addEventListener("change",ne);const ie=new URLSearchParams(window.location.search),E=ie.get("room");E&&(r=E,P(r));function ce(e){a&&a.readyState==="open"?a.send(e.chunk):(console.log("Data channel is not open, queuing file"),m.push(e))}function ae(){n&&(n.close(),n=null),a&&(a.close(),a=null),console.log("Cleanup completed.")}function d(){p<k?(p++,setTimeout(B,U)):(console.error("Retry limit reached. Cleanup initiated."),ae())}

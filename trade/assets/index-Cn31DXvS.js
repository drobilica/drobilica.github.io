(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))l(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const f of i.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&l(f)}).observe(document,{childList:!0,subtree:!0});function a(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function l(n){if(n.ep)return;n.ep=!0;const i=a(n);fetch(n.href,i)}})();const B="wss://relay.drobilica.com:8080",L="turn:relay.drobilica.com:3478",v="forky",O="3kerQa28CjgX",P={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:L,username:v,credential:O}]},D={ordered:!0,maxRetransmits:0},g=16384,F=4e3,$=document.getElementById("generateRoomBtn"),x=document.getElementById("roomCode"),N=document.getElementById("copyRoomUrlBtn"),k=document.getElementById("copyRoomIdBtn"),J=document.getElementById("joinRoomInput"),U=document.getElementById("joinRoomBtn"),T=document.getElementById("yourFileInput"),j=document.getElementById("yourFiles"),z=document.getElementById("theirFiles"),I=document.getElementById("roomDisplay"),p=document.getElementById("uploadProgressContainer"),A=document.getElementById("uploadProgress"),M=document.getElementById("uploadProgressPercent");let t=null,s=null,c=null,r=null,m=[],y=0;function R(){c&&c.close(),c=new WebSocket(B),c.onopen=()=>{console.log("WebSocket connected"),c.send(JSON.stringify({type:"join",room:r})),console.log(`Joined room: ${r}`),E()},c.onmessage=async e=>{let o;try{const a=await e.data.text();o=JSON.parse(a)}catch(a){console.error("Failed to parse message as JSON:",e.data),console.error(a);return}if(o.room!==r){console.log(`Ignoring message for room ${o.room}`);return}o.type==="offer"?await _(o.offer):o.type==="answer"?await G(o.answer):o.type==="candidate"&&await K(o.candidate)},c.onerror=e=>{console.error("WebSocket error:",e)},c.onclose=()=>{console.log("WebSocket closed")}}function E(){t&&t.close(),console.log("Initializing peer connection"),t=new RTCPeerConnection(P),s=t.createDataChannel("fileTransfer",D),h(),t.ondatachannel=e=>{s=e.channel,h()},t.onicecandidate=e=>{e.candidate&&c.send(JSON.stringify({type:"candidate",candidate:e.candidate,room:r}))},q()}function h(){s.onopen=()=>{for(console.log("Data channel open");m.length>0;){const e=m.shift();Y(e)}},s.onclose=()=>{console.log("Data channel closed")},s.onerror=e=>{console.error("Data channel error:",e)},s.onmessage=W}function W(e){const o=JSON.parse(e.data);o.type==="file"&&X(o)}async function q(){try{const e=await t.createOffer();await t.setLocalDescription(e),c.send(JSON.stringify({type:"offer",offer:t.localDescription,room:r}))}catch(e){console.error("Error creating offer:",e)}}async function _(e){t||E();try{t.signalingState!=="stable"&&(console.warn("Peer connection state is not stable, resetting..."),await t.setLocalDescription({type:"rollback"})),await t.setRemoteDescription(new RTCSessionDescription(e));const o=await t.createAnswer();await t.setLocalDescription(o),c.send(JSON.stringify({type:"answer",answer:t.localDescription,room:r}))}catch(o){console.error("Error handling offer:",o)}}async function G(e){try{t.signalingState==="have-local-offer"?await t.setRemoteDescription(new RTCSessionDescription(e)):console.warn("Received answer in unexpected state:",t.signalingState)}catch(o){console.error("Error handling answer:",o)}}async function K(e){try{await t.addIceCandidate(new RTCIceCandidate(e))}catch(o){console.error("Error adding received ICE candidate",o)}}function H(e){const o=e.target.files[0];Q(o)}function Q(e){const o=new FileReader;let a=0;p.classList.remove("hidden"),w(0),o.onload=()=>{if(s&&s.readyState==="open"){const n=o.result;s.send(JSON.stringify({type:"file",name:e.name,chunk:n,size:e.size,room:r})),S({name:e.name,data:n},j),a+=g,w(Math.min(a/e.size*100,100)),a<e.size?l(a):(console.log("File sent successfully"),p.classList.add("hidden"))}else console.log("Data channel is not open, queuing file"),m.push(e)};function l(n){const i=e.slice(n,n+g);o.readAsArrayBuffer(i)}l(0)}function w(e){A.value=e,M.textContent=`${e.toFixed(2)}%`}let d=[],u="";function X(e){if(u||(u=e.name),e.room!==r){console.log(`Ignoring file not intended for this room. Current room: ${r}, message room: ${e.room}`);return}if(d.push(e.chunk),d.length*g>=e.size){const o=new Blob(d);S({name:u,data:URL.createObjectURL(o)},z),d=[],u=""}}function S(e,o){const a=document.createElement("li"),l=document.createElement("a");l.href=e.data,l.download=e.name,l.textContent=e.name,a.appendChild(l),o.appendChild(a);const n=document.createElement("button");n.textContent="Download",n.className="bg-blue-500 text-white px-2 py-1 rounded ml-2",n.addEventListener("click",()=>{const i=document.createElement("a");i.href=e.data,i.download=e.name,i.click()}),a.appendChild(n)}function Z(){I.textContent=`Joined Room: ${r}`;const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)}function b(e){console.log(`Joining room: ${e}`),I.textContent=`Joined Room: ${e}`,R()}$.addEventListener("click",()=>{const e=Date.now();e-y>=F?(t&&(t.close(),t=null),c&&(c.close(),c=null),r=Math.random().toString(36).substring(2,10),x.value=r,console.log(`Generated room: ${r}`),Z(),R(),y=e):console.log("Please wait before generating a new room.")});N.addEventListener("click",()=>{const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)});k.addEventListener("click",()=>{navigator.clipboard.writeText(r).then(()=>console.log("Room ID copied!")),console.log(`Copied room ID: ${r}`)});U.addEventListener("click",()=>{const e=J.value.trim();e&&(r=e,b(r))});T.addEventListener("change",H);const V=new URLSearchParams(window.location.search),C=V.get("room");C&&(r=C,b(r));function Y(e){s&&s.readyState==="open"?s.send(JSON.stringify(e)):(console.log("Data channel is not open, queuing file"),m.push(e))}

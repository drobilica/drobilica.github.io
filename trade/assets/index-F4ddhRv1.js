(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))c(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const d of r.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&c(d)}).observe(document,{childList:!0,subtree:!0});function a(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function c(n){if(n.ep)return;n.ep=!0;const r=a(n);fetch(n.href,r)}})();const R="wss://relay.drobilica.com:8080",C="turn:relay.drobilica.com:3478",E="forky",I="3kerQa28CjgX",S={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:C,username:E,credential:I}]},D=document.getElementById("generateRoomBtn"),B=document.getElementById("roomCode"),L=document.getElementById("copyRoomUrlBtn"),O=document.getElementById("copyRoomIdBtn"),b=document.getElementById("joinRoomInput"),v=document.getElementById("joinRoomBtn"),J=document.getElementById("yourFileInput"),N=document.getElementById("yourFiles"),F=document.getElementById("theirFiles"),p=document.getElementById("roomDisplay");let i,s,l,t,m=[];function g(){l=new WebSocket(R),l.onopen=()=>{console.log("WebSocket connected"),l.send(JSON.stringify({type:"join",room:t})),console.log(`Joined room: ${t}`),y()},l.onmessage=async e=>{let o;try{const a=await e.data.text();o=JSON.parse(a)}catch(a){console.error("Failed to parse message as JSON:",e.data),console.error(a);return}o.type==="offer"?await U(o.offer):o.type==="answer"?await k(o.answer):o.type==="candidate"&&await P(o.candidate)},l.onerror=e=>{console.error("WebSocket error:",e)}}function y(){console.log("Initializing peer connection"),i=new RTCPeerConnection(S),s=i.createDataChannel("fileTransfer"),u(),i.ondatachannel=e=>{s=e.channel,u()},i.onicecandidate=e=>{e.candidate&&l.send(JSON.stringify({type:"candidate",candidate:e.candidate,room:t}))},x()}function u(){s.onopen=()=>{for(console.log("Data channel open");m.length>0;){const e=m.shift();s.send(JSON.stringify(e)),console.log("Sent queued file:",e)}},s.onclose=()=>console.log("Data channel closed"),s.onerror=e=>console.error("Data channel error:",e),s.onmessage=$}function $(e){const o=JSON.parse(e.data);h(o,F)}async function x(){try{const e=await i.createOffer();await i.setLocalDescription(e),l.send(JSON.stringify({type:"offer",offer:i.localDescription,room:t}))}catch(e){console.error("Error creating offer:",e)}}async function U(e){i||y();try{await i.setRemoteDescription(new RTCSessionDescription(e));const o=await i.createAnswer();await i.setLocalDescription(o),l.send(JSON.stringify({type:"answer",answer:i.localDescription,room:t}))}catch(o){console.error("Error handling offer:",o)}}async function k(e){try{await i.setRemoteDescription(new RTCSessionDescription(e))}catch(o){console.error("Error handling answer:",o)}}async function P(e){try{await i.addIceCandidate(new RTCIceCandidate(e))}catch(o){console.error("Error adding received ICE candidate",o)}}function T(e){const o=e.target.files[0],a=new FileReader;a.onloadend=()=>{const c={name:o.name,data:a.result};h(c,N),s&&s.readyState==="open"?s.send(JSON.stringify(c)):(console.log("Data channel is not open, queuing file"),m.push(c))},o&&a.readAsDataURL(o)}function h(e,o){const a=document.createElement("li"),c=document.createElement("a");c.href=e.data,c.download=e.name,c.textContent=e.name,a.appendChild(c),o.appendChild(a);const n=document.createElement("button");n.textContent="Download",n.className="bg-blue-500 text-white px-2 py-1 rounded ml-2",n.addEventListener("click",()=>{const r=document.createElement("a");r.href=e.data,r.download=e.name,r.click()}),a.appendChild(n)}function j(){p.textContent=`Joined Room: ${t}`;const e=`${window.location.origin}/trade?room=${t}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)}function w(e){console.log(`Joining room: ${e}`),p.textContent=`Joined Room: ${e}`,g()}D.addEventListener("click",()=>{t=Math.random().toString(36).substring(2,10),B.value=t,console.log(`Generated room: ${t}`),j(),g()});L.addEventListener("click",()=>{const e=`${window.location.origin}/trade?room=${t}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)});O.addEventListener("click",()=>{navigator.clipboard.writeText(t).then(()=>console.log("Room ID copied!")),console.log(`Copied room ID: ${t}`)});v.addEventListener("click",()=>{const e=b.value.trim();e&&(t=e,w(t))});J.addEventListener("change",T);const A=new URLSearchParams(window.location.search),f=A.get("room");f&&(t=f,w(t));

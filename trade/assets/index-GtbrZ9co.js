(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))u(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&u(l)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function u(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();const D="wss://relay.drobilica.com:8080",$="turn:relay.drobilica.com:3478",x="forky",O="3kerQa28CjgX",T={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:$,username:x,credential:O}]},N=16384,k=4e3,U=5,J=3e3,z=document.getElementById("generateRoomBtn"),M=document.getElementById("roomCode"),A=document.getElementById("copyRoomUrlBtn"),j=document.getElementById("copyRoomIdBtn"),W=document.getElementById("joinRoomInput"),_=document.getElementById("joinRoomBtn"),q=document.getElementById("yourFileInput"),Y=document.getElementById("yourFiles"),G=document.getElementById("theirFiles"),L=document.getElementById("roomDisplay"),R=document.getElementById("uploadProgressContainer"),K=document.getElementById("uploadProgress"),Q=document.getElementById("uploadProgressPercent");let n=null,c=null,a=null,r=null,p=[],I=0,f=[],y=0,g=[],m=0,w=0,C="";function B(){a&&a.close(),a=new WebSocket(D),a.onopen=()=>{console.log("WebSocket connected"),a.send(JSON.stringify({type:"join",room:r})),console.log(`Joined room: ${r}`),P()},a.onmessage=async e=>{let o;try{const s=await e.data.text();o=JSON.parse(s)}catch(s){console.error("Failed to parse message as JSON:",e.data),console.error(s);return}if(o.room!==r){console.log(`Ignoring message for room ${o.room}`);return}o.type==="offer"?await ee(o.offer):o.type==="answer"?await oe(o.answer):o.type==="candidate"&&ne(o.candidate)},a.onerror=e=>{console.error("WebSocket error:",e)},a.onclose=()=>{console.log("WebSocket closed")}}function P(){le(),console.log("Initializing peer connection");try{n=new RTCPeerConnection(T),c=n.createDataChannel("fileTransfer"),S(c),n.ondatachannel=e=>{c=e.channel,S(c)},n.onicecandidate=e=>{e.candidate&&a.send(JSON.stringify({type:"candidate",candidate:e.candidate,room:r}))},n.onconnectionstatechange=()=>{console.log(`Peer connection state: ${n.connectionState}`),(n.connectionState==="failed"||n.connectionState==="disconnected")&&(console.log("Peer connection failed or disconnected. Retrying..."),d())},V()}catch(e){console.error("Failed to create peer connection:",e),d()}}function S(e){e.binaryType="arraybuffer",e.onopen=()=>{for(console.log("Data channel open"),y=0;p.length>0;){const o=p.shift();ae(o)}},e.onclose=()=>{console.log("Data channel closed"),d()},e.onerror=o=>{console.error("Data channel error:",o),d()},e.onmessage=H}function H(e){if(typeof e.data=="string"){const o=JSON.parse(e.data);o.type==="fileMeta"&&X(o)}else e.data instanceof ArrayBuffer&&Z(e.data)}function X(e){if(e.room!==r){console.log(`Ignoring file not intended for this room. Current room: ${r}, message room: ${e.room}`);return}C=e.name,w=e.size,m=0,g=[]}function Z(e){if(g.push(e),m+=e.byteLength,console.log(`Received ${e.byteLength} bytes, total: ${m} bytes`),m===w){const o=new Blob(g);v({name:C,data:URL.createObjectURL(o)},G),g=[],m=0,w=0,C=""}}async function V(){try{const e=await n.createOffer();await n.setLocalDescription(e),a.send(JSON.stringify({type:"offer",offer:n.localDescription,room:r}))}catch(e){console.error("Error creating offer:",e),d()}}async function ee(e){try{n.signalingState!=="stable"&&(console.warn("Peer connection state is not stable, resetting..."),await n.setLocalDescription({type:"rollback"})),await n.setRemoteDescription(new RTCSessionDescription(e));const o=await n.createAnswer();for(await n.setLocalDescription(o),a.send(JSON.stringify({type:"answer",answer:n.localDescription,room:r}));f.length>0;)await n.addIceCandidate(f.shift())}catch(o){console.error("Error handling offer:",o),d()}}async function oe(e){try{if(n.signalingState==="have-local-offer")for(await n.setRemoteDescription(new RTCSessionDescription(e));f.length>0;)await n.addIceCandidate(f.shift());else console.warn("Received answer in unexpected state:",n.signalingState)}catch(o){console.error("Error handling answer:",o),d()}}function ne(e){n.remoteDescription&&n.remoteDescription.type?n.addIceCandidate(new RTCIceCandidate(e)).catch(o=>{console.error("Error adding received ICE candidate",o)}):(console.log("Queueing candidate until remote description is set"),f.push(e))}function te(e){const o=e.target.files[0];re(o)}function re(e){const o=new FileReader;let s=0;R.classList.remove("hidden"),E(0),v({name:e.name,data:""},Y,!0),c.send(JSON.stringify({type:"fileMeta",name:e.name,size:e.size,room:r})),o.onload=()=>{if(c&&c.readyState==="open"){const t=o.result;c.send(t),s+=t.byteLength,E(Math.min(s/e.size*100,100)),s<e.size?u(s):(console.log("File sent successfully"),R.classList.add("hidden"))}else console.log("Data channel is not open, queuing file"),p.push({file:e,offset:s})};const u=t=>{const i=e.slice(t,t+N);o.readAsArrayBuffer(i)};u(0)}function E(e){K.value=e,Q.textContent=`${e.toFixed(2)}%`}function v(e,o,s){if(Array.from(o.children).find(l=>l.textContent.includes(e.name)))return;const t=document.createElement("li"),i=document.createElement("a");if(i.href=e.data||"#",i.download=e.name,i.textContent=e.name,t.appendChild(i),o.appendChild(t),!s){const l=document.createElement("button");l.textContent="Download",l.className="bg-blue-500 text-white px-2 py-1 rounded ml-2",l.addEventListener("click",()=>{const h=document.createElement("a");h.href=e.data,h.download=e.name,h.click()}),t.appendChild(l)}}function ie(){L.textContent=`Joined Room: ${r}`;const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)}function F(e){console.log(`Joining room: ${e}`),L.textContent=`Joined Room: ${e}`,B()}z.addEventListener("click",()=>{const e=Date.now();e-I>=k?(n&&(n.close(),n=null),a&&(a.close(),a=null),r=Math.random().toString(36).substring(2,10),M.value=r,console.log(`Generated room: ${r}`),ie(),B(),I=e):console.log("Please wait before generating a new room.")});A.addEventListener("click",()=>{const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)});j.addEventListener("click",()=>{navigator.clipboard.writeText(r).then(()=>console.log("Room ID copied!")),console.log(`Copied room ID: ${r}`)});_.addEventListener("click",()=>{const e=W.value.trim();e&&(r=e,F(r))});q.addEventListener("change",te);const ce=new URLSearchParams(window.location.search),b=ce.get("room");b&&(r=b,F(r));function ae(e){c&&c.readyState==="open"?c.send(e.chunk):(console.log("Data channel is not open, queuing file"),p.push(e))}function se(){n&&(n.close(),n=null),c&&(c.close(),c=null),console.log("Cleanup completed.")}function le(){n&&(n.close(),n=null),c&&(c.close(),c=null),f=[],y=0}function d(){y<U?(y++,setTimeout(P,J)):(console.error("Retry limit reached. Cleanup initiated."),se())}

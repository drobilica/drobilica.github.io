(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))f(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&f(l)}).observe(document,{childList:!0,subtree:!0});function a(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function f(t){if(t.ep)return;t.ep=!0;const i=a(t);fetch(t.href,i)}})();const $="wss://relay.drobilica.com:8080",x="turn:relay.drobilica.com:3478",T="forky",k="3kerQa28CjgX",N={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:x,username:T,credential:k}]},U=16384,J=4e3,A=5,z=3e3,B=2*1024*1024,M=document.getElementById("generateRoomBtn"),j=document.getElementById("roomCode"),_=document.getElementById("copyRoomUrlBtn"),q=document.getElementById("copyRoomIdBtn"),W=document.getElementById("joinRoomInput"),H=document.getElementById("joinRoomBtn"),Y=document.getElementById("yourFileInput"),G=document.getElementById("yourFiles"),K=document.getElementById("theirFiles"),D=document.getElementById("roomDisplay"),R=document.getElementById("uploadProgressContainer"),Q=document.getElementById("uploadProgress"),X=document.getElementById("uploadProgressPercent");let n=null,c=null,s=null,r=null,d=[],I=0,m=[],y=0,p=[],g=0,w=0,C="";function F(){s&&s.close(),s=new WebSocket($),s.onopen=()=>{console.log("WebSocket connected"),s.send(JSON.stringify({type:"join",room:r})),console.log(`Joined room: ${r}`),P()},s.onmessage=async e=>{let o;try{const a=await e.data.text();o=JSON.parse(a)}catch(a){console.error("Failed to parse message as JSON:",e.data),console.error(a);return}if(o.room!==r){console.log(`Ignoring message for room ${o.room}`);return}o.type==="offer"?await ne(o.offer):o.type==="answer"?await te(o.answer):o.type==="candidate"&&re(o.candidate)},s.onerror=e=>{console.error("WebSocket error:",e)},s.onclose=()=>{console.log("WebSocket closed")}}function P(){de(),console.log("Initializing peer connection");try{n=new RTCPeerConnection(N),c=n.createDataChannel("fileTransfer"),b(c),n.ondatachannel=e=>{c=e.channel,b(c)},n.onicecandidate=e=>{e.candidate&&s.send(JSON.stringify({type:"candidate",candidate:e.candidate,room:r}))},n.onconnectionstatechange=()=>{console.log(`Peer connection state: ${n.connectionState}`),(n.connectionState==="failed"||n.connectionState==="disconnected")&&(console.log("Peer connection failed or disconnected. Retrying..."),u())},oe()}catch(e){console.error("Failed to create peer connection:",e),u()}}function b(e){e.binaryType="arraybuffer",e.bufferedAmountLowThreshold=B,e.onopen=()=>{for(console.log("Data channel open"),y=0;d.length>0;){const o=d.shift();L(o)}},e.onclose=()=>{console.log("Data channel closed"),u()},e.onerror=o=>{console.error("Data channel error:",o),u()},e.onmessage=Z,e.onbufferedamountlow=()=>{if(console.log("Buffered amount is low, resuming file sending..."),d.length>0){const o=d.shift();L(o)}}}function Z(e){if(typeof e.data=="string"){const o=JSON.parse(e.data);o.type==="fileMeta"&&V(o)}else e.data instanceof ArrayBuffer&&ee(e.data)}function V(e){if(e.room!==r){console.log(`Ignoring file not intended for this room. Current room: ${r}, message room: ${e.room}`);return}C=e.name,w=e.size,g=0,p=[]}function ee(e){if(p.push(e),g+=e.byteLength,console.log(`Received ${e.byteLength} bytes, total: ${g} bytes`),g===w){const o=new Blob(p);v({name:C,data:URL.createObjectURL(o)},K),p=[],g=0,w=0,C=""}}async function oe(){try{const e=await n.createOffer();await n.setLocalDescription(e),s.send(JSON.stringify({type:"offer",offer:n.localDescription,room:r}))}catch(e){console.error("Error creating offer:",e),u()}}async function ne(e){try{n.signalingState!=="stable"&&(console.warn("Peer connection state is not stable, resetting..."),await n.setLocalDescription({type:"rollback"})),await n.setRemoteDescription(new RTCSessionDescription(e));const o=await n.createAnswer();for(await n.setLocalDescription(o),s.send(JSON.stringify({type:"answer",answer:n.localDescription,room:r}));m.length>0;)await n.addIceCandidate(m.shift())}catch(o){console.error("Error handling offer:",o),u()}}async function te(e){try{if(n.signalingState==="have-local-offer")for(await n.setRemoteDescription(new RTCSessionDescription(e));m.length>0;)await n.addIceCandidate(m.shift());else console.warn("Received answer in unexpected state:",n.signalingState)}catch(o){console.error("Error handling answer:",o),u()}}function re(e){n.remoteDescription&&n.remoteDescription.type?n.addIceCandidate(new RTCIceCandidate(e)).catch(o=>{console.error("Error adding received ICE candidate",o)}):(console.log("Queueing candidate until remote description is set"),m.push(e))}function ie(e){const o=e.target.files[0];ce(o)}function ce(e){const o=new FileReader;let a=0;R.classList.remove("hidden"),E(0),v({name:e.name,data:""},G,!0),c.send(JSON.stringify({type:"fileMeta",name:e.name,size:e.size,room:r})),o.onload=()=>{if(c&&c.readyState==="open"){const t=o.result;c.bufferedAmount+t.byteLength>B?(console.log("Data channel buffered amount high, queuing chunk..."),d.push({chunk:t})):(c.send(t),a+=t.byteLength,E(Math.min(a/e.size*100,100)),a<e.size?f(a):(console.log("File sent successfully"),R.classList.add("hidden")))}else console.log("Data channel is not open, queuing file"),d.push({file:e,offset:a})};const f=t=>{const i=e.slice(t,t+U);o.readAsArrayBuffer(i)};f(0)}function E(e){Q.value=e,X.textContent=`${e.toFixed(2)}%`}function v(e,o,a){if(Array.from(o.children).find(l=>l.textContent.includes(e.name)))return;const t=document.createElement("li"),i=document.createElement("a");if(i.href=e.data||"#",i.download=e.name,i.textContent=e.name,t.appendChild(i),o.appendChild(t),!a){const l=document.createElement("button");l.textContent="Download",l.className="bg-blue-500 text-white px-2 py-1 rounded ml-2",l.addEventListener("click",()=>{const h=document.createElement("a");h.href=e.data,h.download=e.name,h.click()}),t.appendChild(l)}}function se(){D.textContent=`Joined Room: ${r}`;const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)}function O(e){console.log(`Joining room: ${e}`),D.textContent=`Joined Room: ${e}`,F()}M.addEventListener("click",()=>{const e=Date.now();e-I>=J?(n&&(n.close(),n=null),s&&(s.close(),s=null),r=Math.random().toString(36).substring(2,10),j.value=r,console.log(`Generated room: ${r}`),se(),F(),I=e):console.log("Please wait before generating a new room.")});_.addEventListener("click",()=>{const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)});q.addEventListener("click",()=>{navigator.clipboard.writeText(r).then(()=>console.log("Room ID copied!")),console.log(`Copied room ID: ${r}`)});H.addEventListener("click",()=>{const e=W.value.trim();e&&(r=e,O(r))});Y.addEventListener("change",ie);const ae=new URLSearchParams(window.location.search),S=ae.get("room");S&&(r=S,O(r));function L(e){c&&c.readyState==="open"?c.send(e.chunk):(console.log("Data channel is not open, queuing file"),d.push(e))}function le(){n&&(n.close(),n=null),c&&(c.close(),c=null),console.log("Cleanup completed.")}function de(){n&&(n.close(),n=null),c&&(c.close(),c=null),m=[],y=0}function u(){y<A?(y++,setTimeout(P,z)):(console.error("Retry limit reached. Cleanup initiated."),le())}

(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))d(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&d(l)}).observe(document,{childList:!0,subtree:!0});function c(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function d(n){if(n.ep)return;n.ep=!0;const i=c(n);fetch(n.href,i)}})();const L="wss://relay.drobilica.com:8080",v="turn:relay.drobilica.com:3478",O="forky",P="3kerQa28CjgX",F={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:v,username:O,credential:P}]},x={ordered:!0,maxRetransmits:0},p=16384,D=4e3,$=document.getElementById("generateRoomBtn"),N=document.getElementById("roomCode"),k=document.getElementById("copyRoomUrlBtn"),J=document.getElementById("copyRoomIdBtn"),U=document.getElementById("joinRoomInput"),T=document.getElementById("joinRoomBtn"),j=document.getElementById("yourFileInput"),z=document.getElementById("yourFiles"),A=document.getElementById("theirFiles"),R=document.getElementById("roomDisplay"),y=document.getElementById("uploadProgressContainer"),M=document.getElementById("uploadProgress"),W=document.getElementById("uploadProgressPercent");let t=null,s=null,a=null,r=null,f=[],h=0;function E(){a&&a.close(),a=new WebSocket(L),a.onopen=()=>{console.log("WebSocket connected"),a.send(JSON.stringify({type:"join",room:r})),console.log(`Joined room: ${r}`),S()},a.onmessage=async e=>{let o;try{const c=await e.data.text();o=JSON.parse(c)}catch(c){console.error("Failed to parse message as JSON:",e.data),console.error(c);return}if(o.room!==r){console.log(`Ignoring message for room ${o.room}`);return}o.type==="offer"?await G(o.offer):o.type==="answer"?await K(o.answer):o.type==="candidate"&&await H(o.candidate)},a.onerror=e=>{console.error("WebSocket error:",e)},a.onclose=()=>{console.log("WebSocket closed")}}function S(){t&&t.close(),console.log("Initializing peer connection"),t=new RTCPeerConnection(F),s=t.createDataChannel("fileTransfer",x),w(),t.ondatachannel=e=>{s=e.channel,w()},t.onicecandidate=e=>{e.candidate&&a.send(JSON.stringify({type:"candidate",candidate:e.candidate,room:r}))},_()}function w(){s.onopen=()=>{for(console.log("Data channel open");f.length>0;){const e=f.shift();ee(e)}},s.onclose=()=>{console.log("Data channel closed")},s.onerror=e=>{console.error("Data channel error:",e)},s.onmessage=q}function q(e){const o=JSON.parse(e.data);o.type==="file"&&Z(o)}async function _(){try{const e=await t.createOffer();await t.setLocalDescription(e),a.send(JSON.stringify({type:"offer",offer:t.localDescription,room:r}))}catch(e){console.error("Error creating offer:",e)}}async function G(e){t||S();try{t.signalingState!=="stable"&&(console.warn("Peer connection state is not stable, resetting..."),await t.setLocalDescription({type:"rollback"})),await t.setRemoteDescription(new RTCSessionDescription(e));const o=await t.createAnswer();await t.setLocalDescription(o),a.send(JSON.stringify({type:"answer",answer:t.localDescription,room:r}))}catch(o){console.error("Error handling offer:",o)}}async function K(e){try{t.signalingState==="have-local-offer"?await t.setRemoteDescription(new RTCSessionDescription(e)):console.warn("Received answer in unexpected state:",t.signalingState)}catch(o){console.error("Error handling answer:",o)}}async function H(e){try{await t.addIceCandidate(new RTCIceCandidate(e))}catch(o){console.error("Error adding received ICE candidate",o)}}function Q(e){const o=e.target.files[0];X(o)}function X(e){const o=new FileReader;let c=0;y.classList.remove("hidden"),C(0),b({name:e.name,data:""},z,!0),o.onload=()=>{if(s&&s.readyState==="open"){const n=o.result;s.send(JSON.stringify({type:"file",name:e.name,chunk:n,size:e.size,room:r})),c+=p,C(Math.min(c/e.size*100,100)),c<e.size?d(c):(console.log("File sent successfully"),y.classList.add("hidden"))}else console.log("Data channel is not open, queuing file"),f.push(e)};function d(n){const i=e.slice(n,n+p);o.readAsArrayBuffer(i)}d(0)}function C(e){M.value=e,W.textContent=`${e.toFixed(2)}%`}let u=[],m="";function Z(e){if(m||(m=e.name),e.room!==r){console.log(`Ignoring file not intended for this room. Current room: ${r}, message room: ${e.room}`);return}if(u.push(e.chunk),u.length*p>=e.size){const o=new Blob(u);b({name:m,data:URL.createObjectURL(o)},A),u=[],m=""}}function b(e,o,c){if(Array.from(o.children).find(l=>l.textContent.includes(e.name)))return;const n=document.createElement("li"),i=document.createElement("a");if(i.href=e.data||"#",i.download=e.name,i.textContent=e.name,n.appendChild(i),o.appendChild(n),!c){const l=document.createElement("button");l.textContent="Download",l.className="bg-blue-500 text-white px-2 py-1 rounded ml-2",l.addEventListener("click",()=>{const g=document.createElement("a");g.href=e.data,g.download=e.name,g.click()}),n.appendChild(l)}}function V(){R.textContent=`Joined Room: ${r}`;const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)}function B(e){console.log(`Joining room: ${e}`),R.textContent=`Joined Room: ${e}`,E()}$.addEventListener("click",()=>{const e=Date.now();e-h>=D?(t&&(t.close(),t=null),a&&(a.close(),a=null),r=Math.random().toString(36).substring(2,10),N.value=r,console.log(`Generated room: ${r}`),V(),E(),h=e):console.log("Please wait before generating a new room.")});k.addEventListener("click",()=>{const e=`${window.location.origin}/trade?room=${r}`;navigator.clipboard.writeText(e).then(()=>console.log("Room URL copied!")),console.log(`Copied room URL: ${e}`)});J.addEventListener("click",()=>{navigator.clipboard.writeText(r).then(()=>console.log("Room ID copied!")),console.log(`Copied room ID: ${r}`)});T.addEventListener("click",()=>{const e=U.value.trim();e&&(r=e,B(r))});j.addEventListener("change",Q);const Y=new URLSearchParams(window.location.search),I=Y.get("room");I&&(r=I,B(r));function ee(e){s&&s.readyState==="open"?s.send(JSON.stringify(e)):(console.log("Data channel is not open, queuing file"),f.push(e))}
